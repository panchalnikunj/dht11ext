{"entries":[{"timestamp":1743411366389,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% block=\"DHT11 Sensor\"\nnamespace DHT11 {\n    let dhtPin = DigitalPin.P2;\n\n    /**\n     * Read temperature from DHT11 sensor.\n     * @return Temperature in Celsius\n     */\n    //% block=\"read temperature in C\"\n    export function readTemperature(): number {\n        let buffer: number[] = [];\n        pins.digitalWritePin(dhtPin, 0);\n        basic.pause(18);\n        pins.digitalReadPin(dhtPin);\n        control.waitMicros(40);\n\n        for (let i = 0; i < 40; i++) {\n            while (pins.digitalReadPin(dhtPin) == 0);\n            let start = control.micros();\n            while (pins.digitalReadPin(dhtPin) == 1);\n            let duration = control.micros() - start;\n            buffer.push(duration > 50 ? 1 : 0);\n        }\n\n        let tempBits = buffer.slice(16, 24);\n        let temperature = 0;\n        for (let i = 0; i < 8; i++) {\n            temperature = (temperature << 1) | tempBits[i];\n        }\n        return temperature;\n    }\n\n    /**\n     * Read humidity from DHT11 sensor.\n     * @return Humidity in percentage\n     */\n    //% block=\"read humidity in %\"\n    export function readHumidity(): number {\n        let buffer: number[] = [];\n        pins.digitalWritePin(dhtPin, 0);\n        basic.pause(18);\n        pins.digitalReadPin(dhtPin);\n        control.waitMicros(40);\n\n        for (let i = 0; i < 40; i++) {\n            while (pins.digitalReadPin(dhtPin) == 0);\n            let start = control.micros();\n            while (pins.digitalReadPin(dhtPin) == 1);\n            let duration = control.micros() - start;\n            buffer.push(duration > 50 ? 1 : 0);\n        }\n\n        let humidityBits = buffer.slice(0, 8);\n        let humidity = 0;\n        for (let i = 0; i < 8; i++) {\n            humidity = (humidity << 1) | humidityBits[i];\n        }\n        return humidity;\n    }\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":1806,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"  \"main."],[-1,"t"],[1,"block"],[0,"s\",\n    "]],"start1":168,"start2":168,"length1":17,"length2":21},{"diffs":[[0,"   \""],[-1,"README.md\"\n    ],\n    \"testFiles\": ["],[1,"main.ts\","],[0,"\n   "]],"start1":190,"start2":190,"length1":44,"length2":17},{"diffs":[[0,"   \""],[-1,"test.ts"],[1,"README.md"],[0,"\"\n  "]],"start1":209,"start2":209,"length1":15,"length2":17},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":232,"start2":232,"length1":32,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1743411366388,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"DHT11Ext\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1743411422073}